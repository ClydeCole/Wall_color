#!/usr/bin/bash
# shellcheck disable=SC1090
# shellcheck disable=SC2154
# shellcheck disable=SC2034
source ~/.local/share/wcl/settings.conf
source ~/.local/share/wcl/help/"${language}"
source ~/.local/share/wcl/color
source ~/.local/share/wcl/functions

############### Main of Wall Color ####################
wcl() {
show_help="show_help_${language}"
#下面是爲了檢測是否爲特殊參數
case "$1" in
# 幫助文檔
    -h|--help)
    ${show_help}
    exit 0
    ;;
    # 切換語言
    -lang)
    # 沒有內容，進入選擇菜單
    if [ $# = "1" ]; then
        setting_language
    #中文
    elif [ "$2" = "cn" ];then
        sed -i 's/^language=.*/language="cn"/' ~/.local/share/wcl/settings.conf
        echo "設定成功"
    # 英文
    elif [ "$2" = "en" ];then
        sed -i 's/^language=.*/language=\"en\"/' ~/.local/share/wcl/settings.conf
        echo "Language setting successful"
    else
        printf "語言錯誤,目前支持的語言有:\n正體中文: cn\nEnglish : en\n"
    fi
    exit 0
    ;;
esac

# 下面是爲了檢查用戶輸入是否符合基礎要求
if [ $# -lt "2" ]; then
    error_ret_code="參數似乎不足"
    error_command
    exit 1
elif [ "${1:0:1}" != "-" ]; then
    error_ret_code="必須以-開頭"
    error_command
    exit 1
elif [ $# -gt 2 ]; then
    error_ret_code="參數過多"
    error_command
    exit 1
fi

color_option="${1#-}" # 識別輸入的第一個參數（顏色內容）並去除第一個-
if declare -p "${color_option}" &>/dev/null; then # 識別用戶輸入的顏色是否有被定義
    color_option="${!color_option}" # 將顏色展開爲變數所定義的參數
else
    error_ret_code="${1#-}"
    # echo "${error_ret_code}"
    error_color
    exit 1
fi
text_option=$2 # 識別輸入的第二個參數（文本內容）

# text_len=$(python3 -c "from wcwidth import wcswidth; print(wcswidth(r'$(printf '%s' "$text_option")'))") 
text_len=$(printf "%s$text_option" | python3 -c 's=input().strip(); print(sum(2 if ord(c) > 127 else 1 for c in s))') # 使用python獲取文本的ASCLL佔位符大小

read -r rows terminal_len < <(stty size) # 獲取（終端當前長度）

empty_len=$(((terminal_len - text_len ) / 2)) # 計算左右兩邊的空格數量

empty_len=$(python3 -c "print (' ' * ${empty_len})") # 獲取並打印空格

# read -p "輸入一個數字: " num
# if [ $((num % 2)) -eq 0 ]; then
#     echo "偶數"
# else
#     echo "奇數"
# fi

if [ $(((terminal_len + text_len) % 2)) -eq 0 ]; then
    printf "%s${color_option}${empty_len}${text_option}${empty_len}${NC}\n" # 拼湊起來
else
    printf "%s${color_option}${empty_len} ${text_option}${empty_len}${NC}\n" # 拼湊起來
fi
}
############### Main of Wall Color ####################
wcl "$@"
